// 当前服务的唯一标识
id:agent1.cn.sc.cd

// 运行模式
runmode: dev

// http 服务配置
http:{
    // Addr 监听地址
	addr:":9090"
}

// websocket
websocket:{
    addr:":9093"
}

socket:{
    addr:":9094"
}

router:{
    routes:[
        {
            kitid:2001
            authorization:false
            config:{
                name:"auth"
                group:"prod"
                salt:"certs/x509/ca_cert.pem"
                key:"x.test.example.com"
                sskey:"baa"
                pool:{
                    // 初始池中实例数量
                    init:1

                    // 池最大容量
                    capacity:128

                    // 空闲超时/ 单位(m)
                    idleTimeout:10

                    // 最大生命周期 / 单位(m)
                    maxlife:60
                }
            },
            net:"socket"
            contentType:""
            commands:[ 2001, 2002 ]
        },
        {
            kitid:2001
            authorization:true
            config:{
                name:"auth"
                group:"prod"
                salt:"certs/x509/ca_cert.pem"
                key:"x.test.example.com"
                sskey:"baa"
                pool:{
                    // 初始池中实例数量
                    init:1

                    // 池最大容量
                    capacity:128

                    // 空闲超时/ 单位(m)
                    idleTimeout:10

                    // 最大生命周期 / 单位(m)
                    maxlife:60
                }
            },
            net:"socket"
            contentType:""
            commands:[ 2003,2004,2005,2006 ]
        },
        {
            kitid:7001
            authorization:true
            config:{
                name:"user"
                group:"prod"
                salt:"certs/x509/ca_cert.pem"
                key:"x.test.example.com"
                sskey:"baa"
                pool:{
                    // 初始池中实例数量
                    init:1

                    // 池最大容量
                    capacity:128

                    // 空闲超时/ 单位(m)
                    idleTimeout:10

                    // 最大生命周期 / 单位(m)
                    maxlife:60
                }
            },
            net:"socket"
            contentType:""
            commands:[ 7002,7003,7004,7005,7006,7007,7008,7009,7010 ]
        }
    ]
    
    httpv1:{
        // csrf key
        csrf:"7581BDD8E8DA3839"

        // 命令解密key
        commandSecret:"7581BDD8E8DA3839"

        // 最大http query 长度
        maxQureyLength:1024

        // 最大body
        maxBytesReader:33554432

        // 路由控制
        routes: [
            {
                path:"/user"
                authorization: true
                method:"POST"
                config:{
                    name:"user"
                    group:"prod"
                    salt:"certs/x509/ca_cert.pem"
                    key:"x.test.example.com"
                    sskey:"baa"
                    pool:{
                        // 初始池中实例数量
                        init:1

                        // 池最大容量
                        capacity:128

                        // 空闲超时/ 单位(m)
                        idleTimeout:10

                        // 最大生命周期 / 单位(m)
                        maxlife:60
                    }
                }

                commands:[ 7002,7003,7004,7005,7006,7007,7008,7009,7010 ]
            }
        ]
    }
}


// etcd 配置
etcd:{
    addr:["127.0.0.1:2379"]
}


// rpc 
rpc :{
    name:"agent"
    addr :"127.0.0.1:9099"
    salt:""
    key:""
    sskey: "baa"
}

metrics:{
    addr: ":6070"
    turnOn:"true"
}

// webrtc
webrtc:{
    # Single port, portrange will not work if you enable this
    #singleport: 5000
    # Range of ports that ion accepts WebRTC traffic on
    # Format: [min, max]   and max - min >= 100
    portrange: [ 5000, 5200 ]
    # if sfu behind nat, set iceserver
    iceserver:[
        {
            urls: [ "stun:192.168.31.52:3478" ], 
            username:"pion",
            credential:"ion"
        }
    ]
    
    # In case you're deploying ion-sfu on a server which is configured with
    # a 1:1 NAT (e.g., Amazon EC2), you might want to also specify the public
    # address of the machine using the setting below. This will result in
    # all host candidates (which normally have a private IP address) to
    # be rewritten with the public address provided in the settings. As
    # such, use the option with caution and only if you know what you're doing.
    # Multiple public IP addresses can be specified as a comma separated list
    # if the sfu is deployed in a DMZ between two 1-1 NAT for internal and
    # external users.
    # candidates:{
    #     icelite:true
    #     nat1to1:[ "1.2.3.4" ]
    # }

    # sdp semantics:
    # "unified-plan"
    # "plan-b"
    # "unified-plan-with-fallback"
    sdpsemantics:"unified-plan"

    # toggle multicast dns support: https://tools.ietf.org/html/draft-mdns-ice-candidates-00
    mdns:true

    timeouts:{
        # The duration in [sec] without network activity before a ICE Agent is considered disconnected
        disconnected:5
        # The duration in [sec] without network activity before a ICE Agent is considered failed after disconnected
        failed:25
        # How often in [sec] the ICE Agent sends extra traffic if there is no activity, if media is flowing no traffic will be sent
        keepalive:2
    }
}


nats:{
    urls: ["nats://192.168.31.52:4222"]
    reconnectjitter: ["500","2"]
}