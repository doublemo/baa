syntax = "proto3";
package pb;
option go_package = "github.com/doublemo/baa/internal/proto/pb";

message Authentication {
   

   message Account {
      message Info {
         string ID  = 1;
         string UnionID = 2;
         string UserID = 3;
         string Token = 4;
         string Schema = 5;
         string Name = 6;
         int32 Status = 7;
         int64 ExpiresAt = 8;
         int64 CreatedAt = 9;
      }

      message Request {
         string AccountId = 1;
      }

      message Reply {
         Info Info = 1;
      }
   }

   message Form {
      message AccountInfo {
         string ID  = 1;
         string UnionID = 2;
         string UserID = 3;
         string Token = 4;
      }

      message LoginAccount {
         string Username = 1;
         string Password = 2;
         oneof ValidationCodes {
            ValidationCodes.Phone Phone = 3;
            ValidationCodes.Code  Code = 4;
         }
      }

      message ValidationCodes{
         message Phone {
            string Phone = 1;
            string Code = 2;
         }

         message Code {
            string Code = 1;
         }
      }

      message MobilePhoneSMSCode {
         string Phone = 1;
         string Code = 2;
         int32 ReplayAt = 3;
         int32 ExpireAt = 4;
      }

      message LoginPhone {
         string Phone = 1;
         string Code = 2;
      }

      message Login {
         string Scheme = 1;
         oneof Payload {
            LoginAccount Account = 2;
            MobilePhoneSMSCode SMS = 3;
            LoginPhone Phone = 4;
         }
      }

      message LoginReply {
         string Scheme = 1;
         oneof Payload {
            AccountInfo Account = 2;
            MobilePhoneSMSCode SMS = 3;
         }
      }

      message Register{
         string Scheme = 1;
         oneof Payload {
            RegisterAcount Account = 2;
            MobilePhoneSMSCode SMS = 3;
            RegisterCheckUsername CheckUsername = 4;
            RegisterRobot Robot = 5;
         }
      }

      message RegisterReply {
         string Scheme = 1;
         oneof Payload {
            MobilePhoneSMSCode SMS = 2;
            AccountInfo Account = 3;
            RegisterCheckUsernameReply CheckUsername = 4;
         }
      }

      message RegisterAcount {
         string Username = 1;
         string Password = 2;
         string Phone    = 3;
         string PhoneCode =4;
      }

      message RegisterRobot{
         string Username = 1;
         string Password = 2;
      }

      message RegisterCheckUsername {
         string Username = 1;
      }

      message RegisterCheckUsernameReply {
         bool OK = 1;
      }

      message Logout {
         oneof Payload {
            string ID = 1;
            string Token = 2;
            string PeerID = 3;
         }
      }

      message LogoutReply {
         string ID = 1;
      }
   }
}