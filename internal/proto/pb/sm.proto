syntax = "proto3";
package pb;
option go_package = "github.com/doublemo/baa/internal/proto/pb";

message SM {
    enum Action {
        ActionUserStatusUpdate = 0;
        ActionUserOnline  = 1;
        ActionUserOffline = 2;
        ActionUserCleanCache = 3;
    }

    message Event{
        Action Action = 1;
        bytes  Data   = 2;
    }

   message User{
       message Info {
           uint64 UserId = 1;
           string AgentServer = 2;
           string Platform = 3;
           string Token = 4;
           int64  OnlineAt = 5;
           string IMServer = 6;
           string IDServer = 7;
           string PeerId   = 8;
       }

       message Status {
           uint64 UserId = 1;
           repeated Info Values = 2;
       }

       message Action {
           message Update {
               repeated Status Data = 1;
           }

           message Online {
               uint64 UserId    = 1;
               string Platform  = 2;
               string Agent     = 3;
               string Token = 4;
               string PeerId    = 5;
           }

           message Offline {
               uint64 UserId    = 1;
               string Platform  = 2;
               string PeerId    = 3;
           }

           message CleanCache {
               uint64 UserId    = 1;
           }
       }

       message Request{
           repeated uint64 Values = 1; 
        }

        message Reply{
            repeated Status Values = 2;
        } 

        message Servers{
            message Info {
                uint64 UserId = 1;
                map<string, string> Servers = 2;
            }

            message Request {
                repeated uint64 Values = 1; 
            }

            message Reply{
                repeated Info Values = 2;
            } 

            message Assign{
                string KitName = 2;
                int32  LB      = 3;
            }

            message AssignServerRequest {
                uint64 UserId = 1;
                repeated Assign Values  = 2;
            }

            message AssignServerReply {
                map<string, string> PeerId  = 1;
                Info Values = 2;
            }
        }
   }


   message Broadcast {
       message Message {
           int32 Command = 1;
           int32 SubCommand = 2;
           bytes Payload = 3;
           repeated uint64  Receiver = 4; 
       }

       message Messages {
           repeated Message Values = 1;
           bool Sync = 2;
       }

       message Ack {
           repeated uint64 Successed = 1;
           repeated uint64 Failed = 2;
       }
   }
}
